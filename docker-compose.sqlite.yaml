services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
    image: prompt-manager-app:latest
    depends_on:
      migrate:
        condition: service_completed_successfully
      redis:
        condition: service_healthy
    environment:
      PROMPT_MANAGER_ENV: development
      PROMPT_MANAGER_DATABASE_DRIVER: sqlite
      PROMPT_MANAGER_DATABASE_DSN: "file:./data/dev.db?cache=shared&_fk=1"
      PROMPT_MANAGER_REDIS_ADDR: redis:6379
      PROMPT_MANAGER_AUTH_ACCESS_TOKEN_SECRET: ${PROMPT_MANAGER_ACCESS_TOKEN_SECRET}
      PROMPT_MANAGER_AUTH_REFRESH_TOKEN_SECRET: ${PROMPT_MANAGER_REFRESH_TOKEN_SECRET}
      PROMPT_MANAGER_AUTH_API_KEY_HASH_SECRET: ${PROMPT_MANAGER_API_KEY_HASH_SECRET}
    volumes:
      - ./data:/app/data
    ports:
      - "8080:8080"
    command: ["--config-dir=./config", "--env=development"]
    restart: unless-stopped

  frontend:
    build:
      context: ./web
      dockerfile: Dockerfile
      args:
        VITE_API_BASE_URL: '${VITE_API_BASE_URL:-/api/v1}'
    image: prompt-manager-frontend:latest
    depends_on:
      app:
        condition: service_started
    ports:
      - "3000:80"
    restart: unless-stopped

  migrate:
    image: migrate/migrate:v4.17.1
    command:
      [
        "-path",
        "./migrations",
        "-database",
        "sqlite3://./data/dev.db",
        "up"
      ]
    volumes:
      - ./db/migrations:/migrations:ro
      - ./data:/data
    restart: "no"

  redis:
    image: redis:7-alpine
    command: ["redis-server", "--save", "", "--appendonly", "no"]
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    volumes:
      - redis_data:/data
    ports:
      - "6379:6379"
    restart: unless-stopped

volumes:
  redis_data:
