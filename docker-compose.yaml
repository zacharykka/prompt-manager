services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
    image: prompt-manager-app:latest
    depends_on:
      migrate:
        condition: service_completed_successfully
      redis:
        condition: service_healthy
    environment:
      PROMPT_MANAGER_ENV: production
      PROMPT_MANAGER_DATABASE_DRIVER: postgres
      PROMPT_MANAGER_DATABASE_DSN: "postgres://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgres:5432/${POSTGRES_DB}?sslmode=disable"
      PROMPT_MANAGER_REDIS_ADDR: redis:6379
      PROMPT_MANAGER_AUTH_ACCESS_TOKEN_SECRET: ${PROMPT_MANAGER_ACCESS_TOKEN_SECRET}
      PROMPT_MANAGER_AUTH_REFRESH_TOKEN_SECRET: ${PROMPT_MANAGER_REFRESH_TOKEN_SECRET}
      PROMPT_MANAGER_AUTH_API_KEY_HASH_SECRET: ${PROMPT_MANAGER_API_KEY_HASH_SECRET}
    ports:
      - "8080:8080"
    command: ["--config-dir=/app/config", "--env=production"]
    restart: unless-stopped

  migrate:
    image: migrate/migrate:v4.17.1
    depends_on:
      postgres:
        condition: service_healthy
    command:
      [
        "-path",
        "/migrations",
        "-database",
        "postgres://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgres:5432/${POSTGRES_DB}?sslmode=disable",
        "up"
      ]
    volumes:
      - ./db/migrations:/migrations:ro
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    restart: "no"

  postgres:
    image: postgres:15-alpine
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER}"]
      interval: 10s
      timeout: 5s
      retries: 5
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    restart: unless-stopped

  redis:
    image: redis:7-alpine
    command: ["redis-server", "--save", "", "--appendonly", "no"]
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    volumes:
      - redis_data:/data
    ports:
      - "6379:6379"
    restart: unless-stopped

volumes:
  postgres_data:
  redis_data:
